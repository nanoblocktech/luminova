#!/usr/bin/env php
<?php
/**
 * Luminova Framework
 *
 * @package Luminova
 * @author Ujah Chigozie Peter
 * @copyright (c) Nanoblock Technology Ltd
 * @license See LICENSE file
 */

 // Refuse to run when called from php-cgi
if (strpos(PHP_SAPI, 'cgi') === 0) {
    exit("The cli tool is not supported when running php-cgi. It needs php-cli to function!\n\n");
}

// Check PHP version.
$minPhpVersion = '8.0';
if (version_compare(PHP_VERSION, $minPhpVersion, '<')) {
    $message = sprintf(
        'Your PHP version must be %s or higher to run Luminova. Current version: %s',
        $minPhpVersion,
        PHP_VERSION
    );

    exit($message);
}

// We want errors to be shown when using it from the CLI.
error_reporting(-1);
ini_set('display_errors', '1');

// Path to the front controller
define('PUBLIC_PATH', __DIR__ . DIRECTORY_SEPARATOR . 'public' . DIRECTORY_SEPARATOR);

// Ensure the current directory is pointing to the front controller's directory
chdir(PUBLIC_PATH);

// Location of the framework bootstrap file.
require __DIR__ . '/system/plugins/autoload.php';

// Load environment settings from .env files into $_SERVER and $_ENV
Luminova\Config\DotEnv::register(__DIR__ . DIRECTORY_SEPARATOR . '.env');

// Load our paths config file
$paths = new Luminova\Config\SystemPaths();

// Define ENVIRONMENT
if (! defined('ENVIRONMENT')) {
    define('ENVIRONMENT', getenv('app.environment.mood', 'production'));
}

// Show basic information before we do anything else.
if (($suppress = array_search('--no-header', $_SERVER['argv'], true) !== false)) {
    unset($_SERVER['argv'][$suppress]);
    $suppress = true;
}


// Initialize our Console
$console = new  Luminova\Command\Console($suppress);

// Initialize Terminal CLI
$terminal = $console::getTerminal();

// Run our console instance
$console->run($terminal);